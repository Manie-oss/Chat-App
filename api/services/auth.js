const bcrypt = require('bcrypt');
const jwt = require('jsonwebtoken');

const ISSUED_AT_TIME_KEY = 'iat';
const EXPIRATION_DURATION_SECONDS = 3600;
const SECRET = process.env.JWT_SECRET;
const SALT_ROUNDS = 5;

class AuthService {
    /** Returns token generated by signing data using jwt */
    static signData(data) {
        return jwt.sign(data, SECRET);        
    }

    /** Returns data by verifying and decoding the token */
    static verifyToken(token) {
        return jwt.verify(token, SECRET);
    }

    /** checks is token after decoding is expired or not */
    static isExpired(data) {
        if(!data) return true;

        const currentDate = Date.now() / 1000;
        return currentDate > data[ISSUED_AT_TIME_KEY] + EXPIRATION_DURATION_SECONDS;
    }

    static hashPassword(passwordString) {
        return bcrypt.hashSync(passwordString, bcrypt.genSaltSync(SALT_ROUNDS));
    }
}



module.exports = AuthService;